<statement> ::= <expression> <NEWLINE> | <declare> |
	<assign> | <if> | <while> | "break" <NEWLINE> |
	"continue" <NEWLINE> | <functionDefinition> |
	<return> | <include>
<functionDefinition> ::= 
	"function" <name> "(" <params>? ")" ":" <block> |
	"function" <name> "(" <params>? ")" -> <type> ":" <block>
<params> ::= <type> <name> ("," <type> <name>)*
<block> ::= <NEWLINE> <INDENT> <statement>* <DEDENT>
<if> ::= "if" <expression> ":" <block> <elseIf>? <else>?
<elseIf> ::= "elseIf" <expression> ":" <block> <elseIf>
<else> ::= "else" ":" <block>
<while> ::= "while" <expression> ":" <block>
<include> ::= "include" <STRING> <NEWLINE>
<return> ::= "return" <expression> <NEWLINE>
<declare> ::= <type> <name> <NEWLINE> |
	<type> <name> "=" <expression> <NEWLINE>
<assign> ::= <name> "=" <expression> <NEWLINE>
<expression> ::= <value> | "(" <expression> ")" |
	<expression> "<" <expression>  |
	<expression> ">" <expression>  |
	<expression> "<=" <expression> |
	<expression> ">=" <expression> |
	<expression> "==" <expression> |
	<expression> "!=" <expression> |
	<expression> "+"  <expression> |
	<expression> "-"  <expression> |
	<expression> "*"  <expression> |
	<expression> "/"  <expression> |
	<expression> "and"<expression> |
	<expression> "or" <expression> |
	"not" <expression>
<functionCall> ::= <name> "(" <arguments>  ")"
<arguments> ::= <expression> ("," <expression>)*
<value> ::= <NUMBER> 
	| <name>
	| "True" 
	| "False" 
	| <functionCall> 
<type> ::= "Integer" | "Decimal" | "Boolean"